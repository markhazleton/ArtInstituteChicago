@model WebSpark.ArtSpark.Demo.Models.CollectionDetailsViewModel
@using WebSpark.ArtSpark.Demo.Utilities
@{
    ViewData["Title"] = Model.Collection.MetaTitle ?? Model.Collection.Name;
    ViewData["Description"] = Model.Collection.MetaDescription ?? Model.Collection.Description;
    ViewData["Keywords"] = Model.Collection.MetaKeywords;
    
    var canonicalUrl = $"/my/collection/{Model.Collection.Slug}";
    ViewData["CanonicalUrl"] = canonicalUrl;
    
    if (!string.IsNullOrEmpty(Model.Collection.SocialImageUrl))
    {
        ViewData["SocialImageUrl"] = Model.Collection.SocialImageUrl;
    }
}

@section Meta {
    <meta property="og:title" content="@(Model.Collection.MetaTitle ?? Model.Collection.Name)" />
    <meta property="og:description" content="@(Model.Collection.MetaDescription ?? Model.Collection.Description)" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="@canonicalUrl" />
    @if (!string.IsNullOrEmpty(Model.Collection.SocialImageUrl))
    {
        <meta property="og:image" content="@Model.Collection.SocialImageUrl" />
        <meta property="og:image:alt" content="@Model.Collection.Name" />
    }
    
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="@(Model.Collection.MetaTitle ?? Model.Collection.Name)" />
    <meta name="twitter:description" content="@(Model.Collection.MetaDescription ?? Model.Collection.Description)" />
    @if (!string.IsNullOrEmpty(Model.Collection.SocialImageUrl))
    {
        <meta name="twitter:image" content="@Model.Collection.SocialImageUrl" />
    }
    
    @if (!string.IsNullOrEmpty(Model.Collection.MetaKeywords))
    {
        <meta name="keywords" content="@Model.Collection.MetaKeywords" />
    }
    
    <link rel="canonical" href="@canonicalUrl" />
      <!-- Structured Data -->
    <script type="application/ld+json">
    {
        "@@context": "https://schema.org",
        "@@type": "Collection",
        "name": "@Html.Raw(Html.Encode(Model.Collection.Name))",
        "description": "@Html.Raw(Html.Encode(Model.Collection.Description ?? ""))",
        "url": "@canonicalUrl"@if (!string.IsNullOrEmpty(Model.Collection.SocialImageUrl)){<text>,
        "image": "@Model.Collection.SocialImageUrl"</text>},
        "numberOfItems": @Model.Artworks.Count(),
        "dateCreated": "@Model.Collection.CreatedAt.ToString("yyyy-MM-dd")",
        "dateModified": "@(Model.Collection.UpdatedAt?.ToString("yyyy-MM-dd") ?? Model.Collection.CreatedAt.ToString("yyyy-MM-dd"))"
    }
    </script>
}

<div class="container-fluid px-3 px-lg-4">
    <!-- Breadcrumb Navigation -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/collections">Collections</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Collection.Name</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-12">
            <!-- Collection Header -->
            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="flex-grow-1">
                            <div class="d-flex align-items-center mb-2">
                                <h1 class="h3 mb-0 me-3">
                                    @if (Model.Collection.IsPublic)
                                    {
                                        <i class="bi bi-globe text-success me-2" title="Public Collection"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-lock text-warning me-2" title="Private Collection"></i>
                                    }
                                    @Model.Collection.Name
                                </h1>
                                
                                @if (Model.Collection.IsFeatured)
                                {
                                    <span class="badge bg-warning text-dark">
                                        <i class="bi bi-star-fill me-1"></i>Featured
                                    </span>
                                }
                            </div>
                            
                            <div class="text-muted mb-2">
                                <small>
                                    <i class="bi bi-calendar me-1"></i>
                                    Created @Model.Collection.CreatedAt.ToString("MMMM dd, yyyy")
                                    @if (Model.Collection.UpdatedAt.HasValue)
                                    {
                                        <span class="mx-2">•</span>
                                        <i class="bi bi-pencil me-1"></i>
                                        <text>Updated </text>@(Model.Collection.UpdatedAt.Value.ToString("MMMM dd, yyyy"))
                                    }
                                    @if (Model.Collection.ViewCount > 0)
                                    {
                                        <span class="mx-2">•</span>
                                        <i class="bi bi-eye me-1"></i>
                                        @(Model.Collection.ViewCount)<text> views</text>
                                    }
                                </small>
                            </div>
                            
                            @if (!string.IsNullOrEmpty(Model.Collection.Tags))
                            {
                                <div class="mb-2">
                                    @foreach (var tag in Model.Collection.Tags.Split(',', StringSplitOptions.RemoveEmptyEntries))
                                    {
                                        <span class="badge bg-secondary me-1">#@tag.Trim()</span>
                                    }
                                </div>
                            }
                        </div>
                        
                        @if (Model.CanEdit)
                        {
                            <div class="d-flex gap-2">
                                <a asp-action="Collections" class="btn btn-outline-secondary">
                                    <i class="bi bi-arrow-left me-1"></i>Back to Collections
                                </a>
                                <div class="dropdown">
                                    <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="bi bi-gear me-1"></i>Manage
                                    </button>                                    <ul class="dropdown-menu">
                                        <li>
                                            <a class="dropdown-item" asp-action="EditCollection" asp-route-id="@Model.Collection.Id">
                                                <i class="bi bi-pencil me-2"></i>Edit Collection
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <form asp-action="DeleteCollection" method="post" class="d-inline w-100"
                                                  onsubmit="return confirm('Are you sure you want to delete this collection? This action cannot be undone.');">
                                                <input type="hidden" name="id" value="@Model.Collection.Id" />
                                                <button type="submit" class="dropdown-item text-danger">
                                                    <i class="bi bi-trash me-2"></i>Delete Collection
                                                </button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        }
                        else
                        {
                            <a asp-controller="Home" asp-action="Collections" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left me-1"></i>Back to Collections
                            </a>
                        }
                    </div>
                </div>
                
                @if (!string.IsNullOrWhiteSpace(Model.Collection.Description))
                {
                    <div class="card-body border-bottom">
                        <div class="card-text mb-0">
                            @Html.Raw(Html.Encode(Model.Collection.Description).Replace("\n", "<br>"))
                        </div>
                    </div>
                }
                
                @if (!string.IsNullOrWhiteSpace(Model.Collection.LongDescription))
                {
                    <div class="card-body border-bottom">
                        <h6 class="fw-bold mb-2">About This Collection</h6>
                        <div class="card-text">
                            @Html.Raw(Html.Encode(Model.Collection.LongDescription).Replace("\n", "<br>"))
                        </div>
                    </div>
                }
                
                @if (!string.IsNullOrWhiteSpace(Model.Collection.CuratorNotes))
                {
                    <div class="card-body">
                        <h6 class="fw-bold mb-2">
                            <i class="bi bi-person-badge me-2"></i>Curator's Notes
                        </h6>
                        <div class="card-text">
                            @Html.Raw(Html.Encode(Model.Collection.CuratorNotes).Replace("\n", "<br>"))
                        </div>
                    </div>
                }
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- Content Sections -->
            @if (Model.ContentSections.Any())
            {
                <div class="mb-4">
                    <h5 class="mb-3">
                        <i class="bi bi-file-text me-2"></i>Content Sections
                    </h5>
                    @foreach (var section in Model.ContentSections.Where(s => s.IsVisible).OrderBy(s => s.DisplayOrder))
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <h6 class="card-title">@(section.Title)</h6>
                                <div class="card-text">
                                    @Html.Raw(Html.Encode(section.Content).Replace("\n", "<br>"))
                                </div>
                                @if (!string.IsNullOrEmpty(section.SectionType) && section.SectionType != "text")
                                {
                                    <small class="text-muted">
                                        <i class="bi bi-tag me-1"></i>@(section.SectionType)
                                    </small>
                                }
                            </div>
                        </div>
                    }
                </div>
            }

            <!-- Media Items -->
            @if (Model.MediaItems.Any())
            {
                <div class="mb-4">
                    <h5 class="mb-3">
                        <i class="bi bi-images me-2"></i>Media Gallery
                    </h5>
                    <div class="row">
                        @foreach (var media in Model.MediaItems.OrderBy(m => m.DisplayOrder))
                        {
                            <div class="col-lg-4 col-md-6 mb-3">
                                <div class="card h-100">
                                    @if (media.MediaType == "image" && !string.IsNullOrEmpty(media.MediaUrl))
                                    {
                                        <img src="@media.MediaUrl" 
                                             class="card-img-top" 
                                             alt="@(media.AltText ?? media.Title ?? "Collection media")"
                                             style="height: 200px; object-fit: cover;">
                                    }
                                    @if (!string.IsNullOrEmpty(media.Title) || !string.IsNullOrEmpty(media.Description))
                                    {
                                        <div class="card-body">
                                            @if (!string.IsNullOrEmpty(media.Title))
                                            {
                                                <h6 class="card-title">@media.Title</h6>
                                            }
                                            @if (!string.IsNullOrEmpty(media.Description))
                                            {
                                                <p class="card-text small">@media.Description</p>
                                            }
                                            <small class="text-muted">
                                                <i class="bi bi-file-earmark me-1"></i>@media.MediaType.ToUpper()
                                            </small>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- External Links -->
            @if (Model.Links.Any())
            {
                <div class="mb-4">
                    <h5 class="mb-3">
                        <i class="bi bi-link-45deg me-2"></i>Related Links
                    </h5>
                    <div class="row">
                        @foreach (var link in Model.Links.Where(l => l.IsVisible).OrderBy(l => l.DisplayOrder))
                        {
                            <div class="col-lg-6 mb-3">
                                <div class="card h-100">
                                    <div class="card-body">
                                        <h6 class="card-title">
                                            <a href="@link.Url" target="_blank" rel="noopener noreferrer" class="text-decoration-none">
                                                @link.Title
                                                <i class="bi bi-box-arrow-up-right ms-1 small"></i>
                                            </a>
                                        </h6>
                                        @if (!string.IsNullOrEmpty(link.Description))
                                        {
                                            <p class="card-text small">@link.Description</p>
                                        }
                                        <small class="text-muted">
                                            <i class="bi bi-tag me-1"></i>@link.LinkType
                                        </small>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Collection Artworks -->
            @if (!Model.Artworks.Any())
            {
                <div class="text-center py-5">
                    <div class="mb-4">
                        <i class="bi bi-collection display-1 text-muted"></i>
                    </div>
                    <h4 class="text-muted">No artworks in this collection yet</h4>
                    <p class="text-muted mb-4">
                        Browse artworks and add them to this collection to get started.
                    </p>
                    @if (Model.CanEdit)
                    {
                        <a asp-controller="Artwork" asp-action="Index" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-1"></i>Browse Artworks
                        </a>
                    }
                </div>
            }
            else
            {
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5>
                        <i class="bi bi-images me-2"></i>
                        Artworks (@Model.Artworks.Count())
                    </h5>
                    @if (Model.CanEdit)
                    {
                        <a asp-controller="Artwork" asp-action="Index" class="btn btn-outline-primary">
                            <i class="bi bi-plus-circle me-1"></i>Add More Artworks
                        </a>
                    }
                </div>                <div class="row">
                    @foreach (var artwork in Model.Artworks.OrderBy(a => a.DisplayOrder).ThenByDescending(a => a.AddedAt))
                    {
                        <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                            <div class="card h-100 shadow-sm">
                                <!-- Artwork Image -->
                                <div class="position-relative">
                                    <div class="artwork-image-container" 
                                         data-artwork-id="@artwork.ArtworkId" 
                                         style="height: 200px; background: #f8f9fa;">
                                        <div class="d-flex align-items-center justify-content-center h-100 text-muted">
                                            <div class="text-center">
                                                <div class="spinner-border spinner-border-sm mb-2" role="status">
                                                    <span class="visually-hidden">Loading...</span>
                                                </div>
                                                <div class="small">Loading image...</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="card-body">                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <div>
                                            <h6 class="card-title mb-1">
                                                @if (!string.IsNullOrEmpty(artwork.CustomTitle))
                                                {
                                                    @if (!string.IsNullOrEmpty(artwork.Slug))
                                                    {
                                                        <a asp-action="CollectionItemDetails" 
                                                           asp-route-collectionSlug="@Model.Collection.Slug" 
                                                           asp-route-itemSlug="@artwork.Slug"
                                                           class="text-decoration-none text-dark">
                                                            @artwork.CustomTitle
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        @artwork.CustomTitle
                                                    }
                                                }
                                                else
                                                {
                                                    @if (!string.IsNullOrEmpty(artwork.Slug))
                                                    {
                                                        <a asp-action="CollectionItemDetails" 
                                                           asp-route-collectionSlug="@Model.Collection.Slug" 
                                                           asp-route-itemSlug="@artwork.Slug"
                                                           class="text-decoration-none text-dark">
                                                            <span class="artwork-title" data-artwork-id="@artwork.ArtworkId">Artwork #@artwork.ArtworkId</span>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span class="artwork-title" data-artwork-id="@artwork.ArtworkId">Artwork #@artwork.ArtworkId</span>
                                                    }
                                                }
                                            </h6>
                                            @if (artwork.IsHighlighted)
                                            {
                                                <span class="badge bg-warning text-dark small">
                                                    <i class="bi bi-star-fill me-1"></i>Highlighted
                                                </span>
                                            }
                                        </div>
                                        <small class="text-muted">
                                            <i class="bi bi-calendar me-1"></i>
                                            @artwork.AddedAt.ToString("MMM dd")
                                        </small>
                                    </div>
                                    
                                    @if (!string.IsNullOrEmpty(artwork.CustomDescription))
                                    {
                                        <p class="card-text small text-muted mb-3">@artwork.CustomDescription</p>
                                    }
                                    
                                    @if (artwork.DisplayOrder > 0)
                                    {
                                        <small class="text-muted d-block mb-2">
                                            <i class="bi bi-list-ol me-1"></i>Position: @artwork.DisplayOrder
                                        </small>
                                    }
                                    
                                    <div class="d-grid gap-2">
                                        @if (!string.IsNullOrEmpty(artwork.Slug))
                                        {
                                            <a asp-action="CollectionItemDetails" 
                                               asp-route-collectionSlug="@Model.Collection.Slug" 
                                               asp-route-itemSlug="@artwork.Slug"
                                               class="btn btn-outline-primary btn-sm">
                                                <i class="bi bi-eye me-1"></i>View Item Details
                                            </a>                                        }
                                        <a asp-controller="Artwork" asp-action="Details" asp-route-id="@artwork.ArtworkId" 
                                           class="btn btn-outline-secondary btn-sm">
                                            <i class="bi bi-palette me-1"></i>View Artwork
                                        </a>
                                        @if (Model.CanEdit)
                                        {
                                            <a asp-action="EditCollectionItem" 
                                               asp-route-collectionId="@Model.Collection.Id" 
                                               asp-route-artworkId="@artwork.ArtworkId"
                                               class="btn btn-outline-warning btn-sm">
                                                <i class="bi bi-pencil me-1"></i>Edit Item
                                            </a>
                                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                                    onclick="removeFromCollection(@artwork.ArtworkId, '@Model.Collection.Id')">
                                                <i class="bi bi-x-circle me-1"></i>Remove
                                            </button>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<!-- Hidden form for removing artworks -->
@if (Model.CanEdit)
{
    <form id="removeArtworkForm" asp-action="RemoveArtworkFromCollection" method="post" style="display: none;">
        <input type="hidden" name="collectionId" id="collectionId" />
        <input type="hidden" name="artworkId" id="artworkId" />
    </form>
}

@section Scripts {    <script>
        function removeFromCollection(artworkId, collectionId) {
            if (confirm('Are you sure you want to remove this artwork from the collection?')) {
                document.getElementById('collectionId').value = collectionId;
                document.getElementById('artworkId').value = artworkId;
                document.getElementById('removeArtworkForm').submit();
            }
        }
        
        function editCollection(collectionId) {
            // Implement edit collection functionality or redirect to edit page
            window.location.href = '/Account/EditCollection/' + collectionId;
        }

        // Load artwork images and titles
        document.addEventListener('DOMContentLoaded', function() {
            const artworkContainers = document.querySelectorAll('.artwork-image-container');
            const artworkTitles = document.querySelectorAll('.artwork-title');
            
            artworkContainers.forEach(async function(container) {
                const artworkId = container.getAttribute('data-artwork-id');
                
                try {
                    // Fetch artwork data from Art Institute API
                    const response = await fetch(`https://api.artic.edu/api/v1/artworks/${artworkId}?fields=id,title,image_id,artist_display`);
                    const data = await response.json();
                    
                    if (data && data.data) {
                        const artwork = data.data;
                        
                        // Update image
                        if (artwork.image_id) {
                            const imageUrl = `https://www.artic.edu/iiif/2/${artwork.image_id}/full/400,/0/default.jpg`;
                            container.innerHTML = `
                                <img src="${imageUrl}" 
                                     class="card-img-top" 
                                     alt="${artwork.title || 'Artwork'}"
                                     style="height: 200px; object-fit: cover;"
                                     loading="lazy">
                            `;
                        } else {
                            // No image available
                            container.innerHTML = `
                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                                     style="height: 200px;">
                                    <i class="bi bi-image display-4 text-muted"></i>
                                </div>
                            `;
                        }
                        
                        // Update title if it's using the default format
                        const titleElement = document.querySelector(`.artwork-title[data-artwork-id="${artworkId}"]`);
                        if (titleElement && artwork.title) {
                            titleElement.textContent = artwork.title;
                        }
                    }
                } catch (error) {
                    console.error('Error loading artwork:', artworkId, error);
                    // Show error state
                    container.innerHTML = `
                        <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                             style="height: 200px;">
                            <div class="text-center text-muted">
                                <i class="bi bi-exclamation-triangle display-6 mb-2"></i>
                                <div class="small">Image unavailable</div>
                            </div>
                        </div>
                    `;
                }            });
        });
    </script>
    
    <style>
        .card-title a {
            transition: color 0.2s ease-in-out;
        }
        
        .card-title a:hover {
            color: var(--bs-primary) !important;
            text-decoration: underline !important;
        }
    </style>
}
